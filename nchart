#!/usr/bin/env bash
# stop on all errors
set -euf -o pipefail

# death after SIGINT
trap 'exit' INT

USAGE_HELP="Usage: nchart { COMMAND }"

# check if arguments are empty
if [ -z "${@+x}" ]; then
    echo "${USAGE_HELP}"; exit 1
fi

# remove subcommand from arguments through shift
NCHART_COMMAND="${1}"; shift
NCHART_ARGS="${@}"

# i.e. source ./scripts/env.sh
.  ./scripts/env.sh;

# scratch directory must be set
if [ -z "${NCHART_SCRATCH}" ]; then
    echo "scratch directory must be set"; exit 1
fi
# create scratch directory if it doesn't exist
mkdir -p "${NCHART_SCRATCH}"

# get name of current top level directory, uuid used if not given
TOP_DIR="$(basename "$PWD")"
if scripts/validate_uuid.sh "${TOP_DIR}"; then
	UUID_FROM_DIR="${TOP_DIR}"
fi

case "${NCHART_COMMAND}" in
	new_chart )
		if [ -z "${NCHART_GOLDEN}" ]; then
			./scripts/new_chart_scratch.sh "${NCHART_ARGS}"
		else
			./scripts/new_chart_golden.sh "${NCHART_ARGS}"
		fi
		;;
	init_chart )
		./scripts/init_chart.sh "${NCHART_ARGS}"
		;;
    commit_chart )
		./scripts/commit_chart.sh "${NCHART_ARGS}"
		;;
    open_chart )
		./scripts/open_chart.sh "${NCHART_ARGS}"
		;;
    sync_chart )
		./scripts/sync_chart.sh "${NCHART_ARGS}"
		;;
    close_chart )
		./scripts/close_chart.sh "${NCHART_ARGS}"
		;;
	* )
		echo "${USAGE_HELP}"; exit 1;;
esac
